/*
 * This file is generated by jOOQ.
 */
package hub.bakdoolot.course_project.tables.records;


import hub.bakdoolot.course_project.tables.Rating;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RatingRecord extends UpdatableRecordImpl<RatingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.rating.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.rating.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.rating.rating_point</code>.
     */
    public void setRatingPoint(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.rating.rating_point</code>.
     */
    public String getRatingPoint() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingRecord
     */
    public RatingRecord() {
        super(Rating.RATING);
    }

    /**
     * Create a detached, initialised RatingRecord
     */
    public RatingRecord(Long id, String ratingPoint) {
        super(Rating.RATING);

        setId(id);
        setRatingPoint(ratingPoint);
        resetChangedOnNotNull();
    }
}
